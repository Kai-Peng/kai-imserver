syntax = "proto3";
package im.yai;

option java_package = "im.kai.server.service.message.protocol";
option java_outer_classname = "WebSocketProtos";

message WebSocketMessage {
    enum Type {
        UNKNOWN             = 0;
        //应答包
        ACK                 = 1;
        //PING 心跳
        PING                = 2;
        //PING 的回应 PONG
        PONG                = 3;
        //用户下线
        USER_OFFLINE        = 4;
        //系统消息
        SYSTEM_NOTICE       = 5;
        //发送消息
        SEND_MESSAGE        = 6;
        //消息通知
        MESSAGE_NOTICE      = 7;
        //用户通知
        USER_NOTICE         = 8;
        //群通知
        ROOM_NOTICE         = 9;
    }

    //消息id
    uint64 id      = 1;
    //消息版本
    float version      = 2;
    //消息类型
    Type   type    = 3;
    //消息数据(ACK, PING, PONG）没有消息内容
    bytes  data = 4;
}

//用户被踢下线的消息
message UserOfflineMessage{
    enum Reason{
        UNKNOWN     = 0;
        //设备变化（多设备登录）
        DEVICE  = 1;
        //TOKEN无效
        TOKEN_EXPIRED   = 2;
        //账号已被锁定
        LOCKED          = 3;
        //系统强制踢下线
        SYSTEM          = 4;
    }
    //被踢的原因
    Reason reason  = 1;
    //如果为DEVICE原因，则为新登录设备的名称
    string deivce_name = 2;
    //新账号的登录地址
    string remote_address = 3;
}

//系统通知消息
message SystemNoticeMessage {
    enum Type {
        UNKNOWN     = 0;
        APP_VERSION = 1;
    }
    //app版本更新消息
    message AppVersionMessage {
        enum Mode {
            option allow_alias = true;

            DOWNLOAD_MODE_UNKNOWN     = 0;
            //跳转模式
            DOWNLOAD_MODE_REDIRECT     = 1;
            //安装模式
            DOWNLOAD_MODE_INSTALL     = 2;
            //手动更新
            UPDATE_MODE_MANUAL      = 1;
            //自动更新（强制更新模式)
            UPDATE_MODE_AUTO        = 2;
        }
        //版本信息
        string version = 1;
        //更新日志
        bytes update_log = 2;
        //更新地址
        string update_url = 3;
        //下载模式
        Mode download_mode = 4;
        //更新模式
        Mode update_mode = 5;
    }
    //类型
    Type type  = 1;
    //消息内容
    bytes data  = 2;
}

//消息相关的通知消息
message MessageNoticeMessage {
    enum Type {
        UNKNOWN     = 0;
        //消息已被拒收(非好友、非群成员或者已被对方屏蔽）
        REJECT      = 1;
        //消息已推送
        DELIVERY    = 2;
        //消息已读
        READ        = 3;
        //撤回消息
        TAKE_BACK   = 4;
    }
    //类型
    Type type  = 1;
    //消息序号
    uint64 seq             = 2;
    //消息来源用户
    string from_user_id      = 3;
    //消息来源用户设备
    int32 from_device_type   = 4;
    //消息来源群组
    string from_room_id      = 5;
    //消息接收用户（接收方为空）
    string to_user_id        = 6;
    //消息接收用户设备（接收方为空）
    int32 to_device_type     = 7;
    //消息接收群（接收方为空）
    string to_room_id        = 8;
    //消息时间（时间戳）
    uint64 timestamp       = 9;
}

//用户相关的通知消息
message UserNoticeMessage{
    enum Type{
        UNKNOWN     = 0;
        //联系人有变化
        CONTACTS_CHANGED  = 1;
        //群组有变化
        ROOM_CHANGED = 2;
    }
    //被踢的原因
    Type type  = 1;
    //消息内容
    bytes data = 2;
}

//群通知消息
message RoomNoticeMessage {
    enum Type {
        UNKNOWN     = 0;
        //群有新用户加入
        USER_JOIN          = 1;
        //群有用户退出
        USER_QUIT          = 2;
        //群有用户被踢出
        USER_DELETE        = 3;
        //群主已转让
        ROOM_TRANSFER           = 4;
        //群名称有更新
        ROOM_NAME_UPDATE        = 5;
        //群图标有更新
        ROOM_ICON_UPDATE        = 6;
    }
    //用户数据
    message UserData {
        //用户id
        string user_id = 1;
        //昵称
        bytes  nickname = 2;
        //头像
        string avatar = 3;
    }
    //加人消息
    message JoinMessage {
        //邀请人
        UserData inviter = 1;
        //加入者列表
        repeated UserData join_user = 2;
    }
    //踢人消息
    message DeleteMessage {
        //操作者
        UserData operator = 1;
        //被删除者
        repeated UserData deleted_user = 2;
    }
    //群主转让消息
    message TransferMessage {
        //操作者
        UserData operator = 1;
        //新群主
        UserData owner = 2;
    }
    //数据更新消息
    message DataUpdatedMessage {
        //旧值
        bytes old_value = 1;
        //新值
        bytes  new_value = 2;
    }
    //类型
    Type type  = 1;
    //消息时间（时间戳）
    uint64 timestamp       = 2;
    //消息来源群组
    string room_id      = 3;
    //消息数据
    bytes  data = 4;
}